generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum cho vai trò người dùng
enum Role {
  DOCTOR
  PATIENT
  MANAGER
}

model Account {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String
  role       Role
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Patient Patient?
}

model Patient {
  user_id           String    @unique @default(uuid())
  full_name         String?
  gender            String?
  date_of_birth     DateTime?
  medical_history   String?
  address           String?
  phone_number      String?
  blood_type        String?
  emergency_contact String?
  insurance_number  String?
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt

  user               Account              @relation(fields: [user_id], references: [id])
  AppointmentRequest AppointmentRequest[]
}

model Doctor {
  user_id      String   @unique @default(uuid())
  full_name    String?
  gender       String?
  phone_number String?
  specialty    String?
  rating       Int?
  bio          String?
  avatar_url   String?
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model ClinicService {
  id                 String               @id @default(uuid())
  name               String               @unique
  description        String?
  price              Decimal              @db.Decimal(10, 2)
  duration_minutes   Int?
  image_url          String?
  requires_doctor    Boolean?
  is_active          Boolean              @default(true)
  created_at         DateTime             @default(now())
  updated_at         DateTime             @updatedAt
  AppointmentRequest AppointmentRequest[]
}

enum StatusRequest {
  PENDING
  CONFIRMED
  REJECTED
  CANCELLED
}

model AppointmentRequest {
  id               String        @id @default(uuid())
  full_name        String
  phone_number     String
  patient_id       String
  service_id       String
  appointment_time DateTime
  status           StatusRequest @default(PENDING)
  created_at       DateTime      @default(now())
  updated_at       DateTime      @updatedAt

  patient Patient       @relation(fields: [patient_id], references: [user_id])
  service ClinicService @relation(fields: [service_id], references: [id])
}
