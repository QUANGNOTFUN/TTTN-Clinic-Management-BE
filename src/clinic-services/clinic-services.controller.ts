import {  Body,  Controller,  Delete,  Get,  Param,  Post,  Put,  UseGuards,} from '@nestjs/common';import { ClinicServicesService } from './clinic-services.service';import { CreateClinicServiceDto } from './dto/create-clinic-service.dto';import { JwtAuthGuard } from '../auth/jwt/jwt-auth.guard';import { RolesGuard } from '../auth/jwt/roles.guard';import { Roles } from '../auth/jwt/roles.decorate';import { Role } from '../auth/entities/account.dto';import { UpdateClinicServiceDto } from './dto/update-clinic-service.dto';@Controller('clinicServices')export class ClinicServicesController {  constructor(private readonly clinicServiceService: ClinicServicesService) {}  @Get('findAll')  async findAll() {    return this.clinicServiceService.findAll();  }  @Get('findOne')  async findOne() {}  @UseGuards(JwtAuthGuard, RolesGuard)  @Roles(Role.MANAGER)  @Post('create')  async create(@Body() data: CreateClinicServiceDto) {    return this.clinicServiceService.create(data);  }  @UseGuards(JwtAuthGuard, RolesGuard)  @Roles(Role.MANAGER)  @Put('update/:id')  async update(@Param('id') id: string, @Body() data: UpdateClinicServiceDto) {    return this.clinicServiceService.update(id, data);  }  @UseGuards(JwtAuthGuard, RolesGuard)  @Roles(Role.MANAGER)  @Delete('delete/:id')  async delete(@Param('id') id: string) {    return this.clinicServiceService.delete(id);  }}