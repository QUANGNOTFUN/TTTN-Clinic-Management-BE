import {  CanActivate,  ExecutionContext,  ForbiddenException,  Injectable,} from '@nestjs/common';import { Reflector } from '@nestjs/core';import { ROLES_KEY } from './roles.decorate';import { Role } from '../../models/account.dto';@Injectable()export class RolesGuard implements CanActivate {  constructor(private reflector: Reflector) {}  canActivate(context: ExecutionContext): boolean {    const requiredRoles = this.reflector.getAllAndOverride<Role[]>(ROLES_KEY, [      context.getHandler(),      context.getClass(),    ]);    if (!requiredRoles) {      return true;    }    const request = context      .switchToHttp()      .getRequest<{ user: { role: Role } }>();    console.log('RolesGuard REQ.USER:', request.user);    const user = request.user;    if (!user) {      throw new ForbiddenException('Bạn không có quyền truy cập');    }    if (!requiredRoles.includes(user.role)) {      throw new ForbiddenException('Bạn không có quyền truy cập');    }    return true;  }}