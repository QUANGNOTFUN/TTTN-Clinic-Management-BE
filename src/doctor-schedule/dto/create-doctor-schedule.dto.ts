import { IsDate, IsEnum, IsNumber, IsString, Min, Max } from 'class-validator';import { ApiProperty } from '@nestjs/swagger';import { Transform } from 'class-transformer';import { IsDateGreaterThanNow } from './is-date-greater-than-now.validator';import { Shift } from '../entities/doctor-schedule.entity';export class CreateDoctorScheduleDto {  @ApiProperty({    description: 'The ID of the doctor',    example: '123e4567-e89b-12d3-a456-426614174000',  })  @IsString({ message: 'ID bác sĩ phải là một chuỗi' })  doctor_id: string;  @ApiProperty({    description: 'The date of the schedule',    example: '2024-03-20T08:00:00Z',  })  @IsDate({ message: 'Ngày lịch khám phải là định dạng ngày hợp lệ' })  @IsDateGreaterThanNow({    message: 'Ngày lịch khám phải lớn hơn thời gian hiện tại',  })  @Transform(({ value }) => new Date(value))  date: Date;  @ApiProperty({    description: 'The shift of the schedule',    enum: Shift,    example: 'MORNING',  })  @IsEnum(Shift, {    message:      'Ca làm việc phải là một trong các giá trị: MORNING, AFTERNOON hoặc OVERTIME',  })  shift: Shift;  @ApiProperty({    description: 'The number of consecutive weeks for the schedule',    example: 3,  })  @IsNumber({}, { message: 'Số tuần liên tục phải là một số' })  @Min(1, { message: 'Số tuần liên tục phải lớn hơn hoặc bằng 1' })  @Max(5, { message: 'Số tuần liên tục không được vượt quá 5' })  consecutiveWeeks: number;}