import {  Body,  Controller,  Get,  Param,  Patch,  Req,  UseGuards,} from '@nestjs/common';import { PatientService } from './patient.service';import { Role } from '../auth/entities/account.dto';import { Roles } from '../auth/jwt/roles.decorate';import { JwtAuthGuard } from '../auth/jwt/jwt-auth.guard';import { RolesGuard } from '../auth/jwt/roles.guard';import { RequestSessionDto } from '../auth/dto/request-session.dto';import { UpdatePatientDto } from './dto/update-patient.dto';@Controller('patients')export class PatientController {  constructor(private readonly patientService: PatientService) {}  @UseGuards(JwtAuthGuard, RolesGuard)  @Roles(Role.PATIENT)  @Get('findOne')  async findOne(@Req() req: RequestSessionDto) {    return this.patientService.findOne(req.user.id);  }  @UseGuards(JwtAuthGuard, RolesGuard)  @Roles(Role.MANAGER)  @Get('findAll')  async findAll() {    return this.patientService.findAll();  }  @UseGuards(JwtAuthGuard, RolesGuard)  @Roles(Role.PATIENT)  @Patch('update/:id')  async update(@Param('id') id: string, @Body() payload: UpdatePatientDto) {    return this.patientService.update(id, payload);  }}