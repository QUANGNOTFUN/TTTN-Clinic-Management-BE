import { BadRequestException, Injectable } from '@nestjs/common';import { PrismaService } from '../prisma/prisma.service';import { join } from 'path';import { unlink } from 'fs/promises';@Injectable()export class ImageService {  constructor(private prisma: PrismaService) {}  async updateDoctorImage(doctorId: string, file: Express.Multer.File) {    if (!file) {      throw new BadRequestException('Không có file ảnh');    }    const doctor = await this.prisma.doctor.findUnique({      where: { user_id: doctorId },    });    if (!doctor) {      throw new BadRequestException('Bác sĩ không tồn tại');    }    // Xóa ảnh cũ nếu có    if (doctor.avatar_url) {      try {        await unlink(join(__dirname, '..', doctor.avatar_url));      } catch {        throw new BadRequestException('Không thể xóa ảnh cũ');      }    }    const newImageUrl = `/uploads/${file.filename}`;    await this.prisma.doctor.update({      where: { user_id: doctorId },      data: { avatar_url: newImageUrl },    });    return { message: 'Cập nhật ảnh thành công' };  }  async updateServiceImage(serviceId: string, file: Express.Multer.File) {    if (!file) {      throw new BadRequestException('Không có file ảnh');    }    // Kiểm tra dịch vụ tồn tại    const service = await this.prisma.clinicService.findUnique({      where: { id: serviceId },    });    if (!service) {      throw new BadRequestException('Dịch vụ không tồn tại');    }    // Xóa ảnh cũ nếu có    if (service.image_url) {      try {        await unlink(join(__dirname, '..', service.image_url));      } catch {        throw new BadRequestException('Không thể xóa ảnh cũ');      }    }    const newImageUrl = `/uploads/${file.filename}`;    await this.prisma.clinicService.update({      where: { id: serviceId },      data: { image_url: newImageUrl },    });    return newImageUrl;  }}